[{"/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/index.js":"1","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/App.js":"2","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/reportWebVitals.js":"3","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/Home.js":"4","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/Board.js":"5","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/CreateTest.js":"6","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/Profile.js":"7","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/TestList.js":"8","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/CreateTestDone.js":"9","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/StartTest.js":"10","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/TestResult.js":"11","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/SignIn.js":"12","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/Share.js":"13","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/MyGroups.js":"14","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/Group.js":"15","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/ShareDone.js":"16"},{"size":500,"mtime":1612532932836,"results":"17","hashOfConfig":"18"},{"size":1646,"mtime":1612562070226,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1612532940141,"results":"20","hashOfConfig":"18"},{"size":2910,"mtime":1612578919021,"results":"21","hashOfConfig":"18"},{"size":2365,"mtime":1612561458440,"results":"22","hashOfConfig":"18"},{"size":2732,"mtime":1612580535118,"results":"23","hashOfConfig":"18"},{"size":913,"mtime":1612568999138,"results":"24","hashOfConfig":"18"},{"size":3417,"mtime":1612577270110,"results":"25","hashOfConfig":"18"},{"size":1447,"mtime":1612546191636,"results":"26","hashOfConfig":"18"},{"size":5177,"mtime":1612574527799,"results":"27","hashOfConfig":"18"},{"size":4337,"mtime":1612574023744,"results":"28","hashOfConfig":"18"},{"size":2284,"mtime":1612561819348,"results":"29","hashOfConfig":"18"},{"size":3200,"mtime":1612561148244,"results":"30","hashOfConfig":"18"},{"size":3863,"mtime":1612556598144,"results":"31","hashOfConfig":"18"},{"size":4781,"mtime":1612561776052,"results":"32","hashOfConfig":"18"},{"size":1643,"mtime":1612553033323,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1f8yp37",{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"36"},"/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/index.js",[],["79","80"],"/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/App.js",["81","82","83","84","85","86","87"],"import './App.css';\nimport React, { Component } from 'react';\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport SignIn from './components/SignIn';\nimport logo_header from './images/Logo_Header.png'\nimport MyGroups from './components/MyGroups';\n// import About from \"./About\";\n// import NotFound from \"./NotFound\";\n\nfunction App() {\n\n  return (\n    <Router>\n      <header className=\"flexContainer\">\n      <Link to=\"/home\">\n        <a onClick={() => {window.location.href=\"./home\"}}><img src={logo_header} style={{ width:'220px'}}/></a>\n        </Link>\n        <Link to=\"/home\">\n\n        </Link>\n      <Link to=\"/home\">\n        <div className=\"nav\" style={{left:'600'}}>\n        <a onClick={() => {window.location.href=\"./home\"}}>나의 테스트</a>\n        </div>\n        </Link>\n        <Link to=\"/group\">\n          <div className=\"nav\">\n          <a onClick={() => {window.location.href=\"/group\"}}>나의 그룹</a>\n          </div>\n        </Link>\n        <Link to=\"/find\">\n          <div className=\"nav\">\n          <a onClick={() => {window.location.href=\"/find\"}}>찾아보기</a>\n          </div>\n        </Link>\n      </header>\n      <main>\n        <Switch>\n          {/* <Route exact path=\"/\" render={() => <SignIn getAuth={this.getAuth} />} />  */}\n          <Route exact path=\"/home\" render={() => <Home \n          userid=\"1\"\n          />}/>\n          <Route path=\"/group\" render={() => <MyGroups\n          // userid={this.userid} \n          />}/>\n          {/* <Route component={NotFound} /> */}\n        </Switch>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/reportWebVitals.js",[],"/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/Home.js",["88"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Home.css';\nimport Board from './components/Board';\n\nclass Home extends Component {\n  constructor(props) { // 컴포넌트 초기화\n    super(props);\n    this.state = {\n      mode: 'mypage',\n      user: {\n        id: '',\n        solvedCount: '',\n        unsolvedCount: '',\n        imageUrl: ''\n      },\n      testList: [\n      ], \n      groups: [{ gid: 1, title: \"알고방\", userCount: 5 },\n      { gid: 3, title: \"정처기방\", userCount: 10 },\n      { gid: 5, itle: \"운체방\", userCount: 7}]\n    }\n  }\n\n  getProfile = async (userid) => { \n    try { \n      var url = \"https://askyourself.herokuapp.com/users/1/profile\"\n      const response = await axios.get(url); \n      this.setState({ user: response.data.result }); \n      console.log();\n    } catch (e) { \n      console.log(e); \n    } \n  };\n\n  getTests = async (userid) => {\n    try {   \n      var url = \"https://askyourself.herokuapp.com/tests/all/1\"\n      const response = await axios.get(url); \n      this.setState({ testList: response.data.result.test}); \n      console.log(response.data.result.test); \n    } catch (e) { \n      console.log(e); \n    } \n}\n\n  getGroups = async (userid) => { \n    try { \n      var url = \"https://askyourself.herokuapp.com/groups\"\n  \n      const formData = new FormData();\n      formData.append('uid', 1);\n      const config = {\n        headers: {\n            'content-type': 'application/json'\n        }\n      };\n\n      const response = await axios.post( url, formData);\n      \n      this.setState({  groupList: response }); \n\n      console.log(response);\n\n    } catch (e) { \n      console.log(e); \n    } \n  }; \n\n  //마운트 될때 실행 \n  componentDidMount() { \n    const { getProfile } = this; getProfile(this.props.userid); \n    const { getTests } = this; getTests(this.props.userid); \n    const { getGroups } = this; getGroups(this.props.userid); \n  }\n\n  render() {\n    console.log(this.state.test);\n    return (\n      <div className=\"App\">\n        <Board\n          mode={this.state.mode}\n          user={this.state.user}\n          testList={this.state.testList}\n          onChangePageCreate={function () {\n            this.setState({ mode: 'testCreate' })\n          }.bind(this)}\n          onChangePageCreateDone={function (tid) {\n            this.setState({ mode: 'testCreatedone' })\n          }.bind(this)}\n          onChangePageStartTest={function () {\n            this.setState({ mode: 'startTest' })\n          }.bind(this)}\n          onChangePageTestResult={function () {\n            this.setState({ mode: 'testResult' })\n          }.bind(this)}\n          onChangePageReStartTest={function (tid) {\n            this.setState({ mode: 'startTest' })\n          }.bind(this)}\n          loadModal={this.loadModal}\n          groupList={this.props.groups}\n        >\n        </Board>\n\n      </div>\n    );\n  }\n}\n\n\nexport default Home;\n","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/Board.js",[],"/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/CreateTest.js",["89"],"/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/Profile.js",["90"],"import React, { Component } from 'react';\nimport basicimg from '../images/basic_Profile.png';\n\nclass Profile extends Component{\n  render() {\n    return (\n      <div className=\"profile\">\n        <div className=\"profile-box\">\n          {/* <img className=\"profile-image\" src={this.props.user.imageUrl}/> */}\n          <img className=\"profile-image\" src={basicimg}/>\n        </div>\n        <h2 className=\"user-id\"> {this.props.user.id} </h2>\n        <div className=\"user-bar\"></div>\n        <div className=\"user_status\">\n          <div className=\"flex\">\n            <h6 className=\"mytest-all\">완료한 테스트        <br /><br />\n                진행중인 테스트         </h6>\n            <h6 className=\"mytest-all-num\" >     {this.props.user.solvedCount}  <br/><br />\n                   {this.props.user.unsolvedCount}</h6>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/TestList.js",["91","92","93","94","95","96","97","98","99","100","101","102","103"],"\nimport React, { Component } from 'react';\nimport like from '../images/testlike.png';\nimport share from '../images/testshare.png';\nimport Share from './Share';\nimport ShareDone from './ShareDone';\nimport '../Home.css'\n\n\nclass TestList extends Component {\n  \n  constructor(props){\n    super(props);\n    this.state = {\n      isModalOpen: false, \n    }\n  }\n  \n  openModal = () => {\n    this.setState({ isModalOpen: true });\n  }\n  \n  closeModal = () => {\n    this.setState({ isModalOpen: false }); \n  }\n\n  render() {\n    let lists = [];\n    let testList = this.props.testList;\n    let i = 0;\n    while (i < testList.length) {\n      if (testList[i].status === \"yes\") {\n        lists.push(\n          <li key={testList[i].tid} className=\"test\">\n            <div className=\"test-info\">\n              <p>{testList[i].title}</p>\n              <h6>{testList[i].createdAt}</h6>\n            </div>\n            <div className=\"test-result\">\n              <div className=\"sub-icon\">\n                <a onClick={this.openModal}><img src={share} width='50' height='50'></img></a>\n                  <Share isOpen={this.state.isModalOpen} close={this.closeModal}/>\n                <a href=\"\"><img src={like} width='50' height='50'></img></a>\n              </div>\n              <div className=\"flex\">\n                <a className=\"btn-result\" data_id={testList[i].tid}\n                  onClick={function (e) {\n                    this.props.onChangePageTestResult(this.data_id);\n                  }.bind(this)} >결과보기</a>\n                <a className=\"btn-result\"\n                  data_id={testList[i].tid}\n                  onClick={function (e) {\n                    this.props.onChangePageTestStart(this.data_id);\n                  }.bind(this)}>재시험보기</a>\n              </div>\n            </div>\n          </li>)\n        i = i + 1;\n      } else {\n        lists.push(\n          <li key={testList[i].id} className=\"test\">\n            <div className=\"test-info\">\n              <p>{testList[i].title}</p>\n              <h6>{testList[i].createdAt}</h6>\n            </div>\n            <div className=\"test-result-second\">\n              <div className=\"sub-icon\">\n                <a onClick={this.openModal}><img src={share} width='50' height='50'></img></a>\n                <Share isOpen={this.state.isModalOpen} close={this.closeModal} />\n                <a href=\"\"><img src={like} width='50' height='50'></img></a>\n              </div>\n              <div className=\"flex\">\n                <a className=\"btn-result\"\n                  data_id={testList[i].tid}\n                  onClick={function (e) {\n                    this.props.onChangePageTestStart(this.data_id);\n                  }.bind(this)}>시험 시작하기 </a>\n              </div>\n            </div>\n          </li>)\n        i = i + 1;\n      }\n    }\n    return (\n      <div className=\"my-tests\">\n        <div className=\"test-over\">\n          <div>\n            <p className=\"titleTL\"> 나의 테스트 </p>\n          </div>\n          <div className=\"testbtn\">\n            <a href=\"#\" className=\"testbtn-font\"\n              onClick={function (e) {\n                this.props.onChangePageCreate();\n              }.bind(this)}><p className=\"testbtn-font\">+ 새로운 테스트 만들기</p>\n            </a>\n          </div>\n        </div>\n        <ul className=\"testlist\">\n          {lists}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TestList;","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/CreateTestDone.js",["104","105","106","107","108","109"],"import React, { Component } from 'react';\nimport '../CreateTest.css'\nimport createMyTestDone from '../images/Create_Mytest_Done.png';\nimport '../CreateTestDone.css'\nimport like from '../images/testlike.png';\nimport share from '../images/testshare.png';\n\n\nclass CreateTestDone extends Component{\n    render() {\n        return (\n            <div className=\"CTD-done\" >\n                <div className=\"CTD-done-content\">\n                    <img src={createMyTestDone} width='450' height='450'/>\n                    <p><br/>테스트가 성공적으로 완성되었습니다 ! <br/><br/>\n                        테스트를 친구들과 공유하고 <br/>\n                        함께 공부해보세요.</p>\n                    <div className=\"CTD-btns\">\n                        <a href=\"\"><img src={share} width='80' height='80' /></a>\n                        <a href=\"\"><img src={like} width='80' height='80' /></a>\n                    </div>\n                    <div className=\"CTD-test-btn\">\n                        <a href=\"\" onClick={function (e) {\n                            this.props.onChangePageTestStart(this.props.tid);\n                            e.preventDefault();\n                        }.bind(this)}>\n                            <p className=\"CTD-test-btn-font\">시험보기</p>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CreateTestDone;","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/StartTest.js",["110","111","112"],"import React from 'react';\nimport { post } from 'axios';\nimport '../TestPage.css';\nimport TestResult from './TestResult';\nimport Moment from 'moment';\n\nclass StartTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'read',\n            questions: [{\n                qid : '1',\n                question: \"Who created Python?\"\n            },\n            {\n                qid : '2',\n                question: \"What is your favorite food?\"\n            },\n            {\n                qid : '3',\n                question: \"When was Python first released?\"\n            }],\n            answers: []\n        }\n    }\n\n    componentDidMount() {\n        /*this.getQuestions()\n        .then(res => this.setState({questions: res}))\n        .catch(err => console.log(err));*/\n    }\n\n    getQuestions = () => {\n        const response = fetch('https://askyourself.herokuapp.com/tests/' + this.props.testId)\n        const body = response.json();\n        return body;\n    }\n\n    handleValueChange = (e) => {\n        const id = e.target.id;\n        const data = e.target.value;\n        let exist = 0;\n        const { answers } = this.state;\n\n        let i = 0;\n        while (i < answers.length) {\n            if (id === answers[i].qid) {\n                answers[i].answer = data;\n                exist = 1;\n            }\n            i++;\n        }\n\n        if (exist === 0) {\n            this.setState((prevState) => {\n                let newAnswers = [...prevState.answers];\n                newAnswers = [...prevState.answers, {qid: id, answer: data}];\n                this.setState({answers: newAnswers});\n            })\n        }\n        console.log(answers);\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        this.sendAnswer()\n        .then((response) => {\n            console.log(response.data);\n            this.setState({mode: \"result\"})\n        })\n        //this.props.history.push(\"/\");\n    }\n\n    sendAnswer = () => {\n        // tid, {qid, }\n        const url = 'https://askyourself.herokuapp.com/ ' + this.props.testId + '/result';\n        const formData = new FormData();\n        formData.append('answers', this.state.answers)\n        /*formData.append('pw', this.state.pw)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }*/\n        return post(url, formData)\n    }\n\n    render() {\n        let num = 0;\n        let cards = [];\n        const questions = this.state.questions;\n        while (num < questions.length) {\n            cards.push(\n                <li key = {num+1}> \n                    <div className = \"qCard\">\n                        <p className = \"title\">질문 {num + 1}</p>\n                        <div className = \"question\">\n                            {questions[num].question}\n                        </div>\n                    </div>\n                    <div className = \"aCard\">\n                        <p className = \"title\">나의 답변</p>\n                        <textarea className = \"answer\" id={questions[num].qid} value={this.state.answers.answer} onChange={this.handleValueChange}/>\n                    </div>\n                </li>\n            )\n            num++;\n        }\n        let mode = this.state.mode;\n        if (mode === \"result\") {\n            return(\n                <div>\n                    <TestResult testId = {this.props.testId} testName = {this.props.testName} testDate = {new Date().toLocaleString()} total = {this.state.questions.length} dateGenerated = {this.props.dateGenerated}/>\n                </div>\n            );\n        }\n        else if (mode === \"leave\") {\n            \n        }\n        else {\n            return (\n                <form onSubmit={this.handleFormSubmit}>\n                    <div className=\"flex-wrapper\">\n                        <p className=\"testName\"> {this.props.testName} 정보처리기사 </p>\n                        <h3 className=\"dateGenerated\"> {this.props.dateGenerated} 20210205 </h3>\n                        <div className=\"cards\">\n                            <ul>\n                                {cards}\n                            </ul>\n                            <div className=\"btn-flex\">\n                                <button type=\"submit\" className=\"submitAnswer\">\n                                    <a className=\"submitLink\" onClick={function (e) {\n                                        this.props.onChangePageTestResult();\n                                        this.setState({ mode: \"result\" });\n                                    }.bind(this)}>제출하기</a>\n                                </button>\n                                <button className=\"leavePage\">\n                                    <a className=\"leaveLink\" onClick={() => { window.location.href = \"/home\" }}\n                                    >나가기</a>\n                                </button>\n                            </div>\n                            <br/><br/><br/><br/><br/>\n                        </div>\n                    </div>\n                </form>\n            );\n        }\n    }\n}\n\nexport default StartTest;","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/TestResult.js",["113","114"],"import React from 'react';\nimport '../TestPage.css';\nimport StartTest from './StartTest';\n\nclass TestResult extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'results',\n            wrong: [{\n                qid : '1',\n                question: 'Who created Python?',\n                answer: 'Navy'\n            },{\n                qid : '3',\n                question: 'When was Python first released?',\n                answer: 'Nike'\n            }]\n        }\n        console.log(this.props.testId);\n        console.log(this.props.testName);\n        console.log(this.props.testDate);\n        console.log(this.total);\n    }\n\n    componentDidMount() {\n        /*this.getResults()\n        .then(res => this.setState({wrong: res}))\n        .catch(err => console.log(err));*/\n    }\n\n    getResults = () => {\n        const response = fetch('https://askyourself.herokuapp.com/tests/' + this.props.testId)\n        const body = response.json();\n        return body;\n    }\n\n    render() {\n        let num = 0;\n        let cards = [];\n        const wrong = this.state.wrong;\n        console.log(wrong);\n        while (num < wrong.length) {\n            cards.push(\n                <li key = {num+1}> \n                    <div className = \"aCard\">\n                        <p className = \"title\">질문 {wrong[num].qid}</p>\n                        <div className = \"question\">\n                            {wrong[num].question}\n                        </div>\n                        <button className = \"viewAnswer\">정답 보기</button>\n                    </div>\n                </li>\n            )\n            num++;\n        }\n        let mode = this.state.mode;\n        if (mode === \"retest\") {\n            return(\n            <div>\n                <StartTest testId = {this.props.testId} testName = {this.props.testName} dateGenerated = {this.props.dateGenerated} testDate = {new Date().toLocaleString()}/>\n            </div>\n            );\n        }\n        else if (mode === \"leave\") {\n\n        }\n        else {\n            return (\n                <div className=\"flex-wrapper\">\n                    <div>\n                    <p className=\"testName\"> {this.props.testName} 정보처리기사 의 결과 </p>\n                    <h3 className=\"dateGenerated\"> {this.props.dateGenerated} 2021.02.05 </h3>\n                    </div>\n                    <div className=\"cards\">\n                        <ul>\n                            <li className = \"qCard\">\n                                <table className = \"testResult\">\n                                    <tbody>\n                                        <tr>\n                                            <td  className = \"testInfo\">시험 응시일</td>\n                                        <td className = \"testResult\">2021.02.05</td>\n                                        </tr>\n                                        <br/>\n                                        <tr>\n                                            <td className = \"testInfo\">맞은 갯수</td>\n                                        <td className = \"testResult\"> 1 / 3</td>\n                                        </tr>\n                                    </tbody>\n\n                                </table>\n                            </li>\n                            <br/><br/>\n                            <p className=\"wrongProbs\"> 틀린 문항</p>\n                            {cards}\n                        </ul>\n                        <div className=\"btn-flex\">\n                        <button type=\"submit\" className=\"submitAnswer\">\n                            <a className=\"submitLink\" onClick={function (e) {\n                                this.props.onChangePageReStartTest();\n                                this.setState({ mode: \"retest\" });\n                            }.bind(this)}>재시험 보기</a>\n                        </button>\n                        <button className=\"leavePage\">\n                            <a className=\"leaveLink\" \n                            onClick={() => {window.location.href=\"./home\"}}>나가기</a>\n                        </button>\n                        </div>\n                        <br />\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default TestResult;","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/SignIn.js",["115","116","117"],"import React from 'react';\nimport { post } from 'axios';\nimport login_thum from '../images/Login_thumbnail.png';\nimport logo from '../images/Logo.png';\nimport '../SignIn.css';\n\nclass SignIn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id : '',\n            password : '',\n            token : ''\n        };\n        this.handleValueChange = this.handleValueChange.bind(this);\n    }\n\n    handleValueChange(e) {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n    Login() {\n        const url = 'https://askyourself.herokuapp.com/session';\n        const formData = new FormData();\n        formData.append('id', this.state.id)\n        formData.append('pw', this.state.pw)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        return post(url, formData, config)\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n        this.Login()\n        .then((response) => {\n            this.setState(this.state.token = response.token);\n            console.log(response.data);\n        })\n        this.props.getAuth(this.state.token, this.state.id);\n        //this.props.history.push(\"/\");\n    }\n\n    render() {\n        return (\n            <div style={{display:\"flex\", width:\"1000px\", height:\"1000px\"}}>\n                <img src={login_thum} style={{height:\"1200px\"}}/>\n                <div className=\"frame\">\n                    <p>로그인</p>\n                    <form onSubmit={this.handleFormSubmit}>\n                        <input type=\"text\" placeholder=\"아이디\" name=\"id\" value={this.state.id} onChange={this.handleValueChange} /> <br />\n                <input type=\"password\" placeholder=\"비밀번호\" name=\"pw\" value={this.state.pw} onChange={this.handleValueChange} /> <br />\n                        <button type=\"submit\" onClick=\"./\"> <a href =\"./\"class=\"font-color\">로그인</a> </button>\n                        {/* <button>회원가입</button> */}\n                        <br/>\n                        <img src={logo} style={{width:\"200px\"}}/>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SignIn;","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/Share.js",["118","119","120","121","122"],"import React from 'react';\nimport '../Modal.css';\nimport closebtn from '../images/Close_Btn.png';\nimport { Checkbox } from '@material-ui/core';\n\nconst Modal = ({ isOpen, close, glist, changePage }) => {\n\n    let groups = [];\n    let groupList = [{ gid: 1, title: \"알고리즘\", userCount: 5 },\n    { gid: 3, title: \"정보처리기사\", userCount: 10 },\n    { gid: 5, title: \"운영체제\", userCount: 7 }]\n\n    let i = 0;\n    while (i < groupList.length) {\n        groups.push(\n            <div style={{ display: \"flex\" }}>\n                <div className=\"cbx\">\n                    <div class=\"mdc-touch-target-wrapper\">\n                        <div class=\"mdc-checkbox mdc-checkbox--touch\">\n                            <input type=\"checkbox\"\n                                class=\"mdc-checkbox__native-control\"\n                                id=\"checkbox-1\" />\n                            <div class=\"mdc-checkbox__background\">\n                                <svg class=\"mdc-checkbox__checkmark\"\n                                    viewBox=\"0 0 24 24\">\n                                    <path class=\"mdc-checkbox__checkmark-path\"\n                                        fill=\"none\"\n                                        d=\"M1.73,12.91 8.1,19.28 22.79,4.59\" />\n                                </svg>\n                                <div class=\"mdc-checkbox__mixedmark\"></div>\n                            </div>\n                            <div class=\"mdc-checkbox__ripple\"></div>\n                        </div>\n                    </div>\n                </div>\n                <p className=\"grptitle\">{groupList[i].title}</p>\n            </div>\n        )\n        i = i + 1\n    }\n\n    return (\n        <React.Fragment>\n            {\n                isOpen ?\n                    <React.Fragment>\n                        <div className=\"Modal-overlay\" onClick={close} />\n                        <div className=\"Modal\">\n                            <div className=\"button-wrap\">\n                                <a onClick={close} style={{ border: \"0\", outline: \"0\" }}><img src={closebtn}></img></a>\n                            </div>\n                            <p className=\"title\">공유할 그룹을 선택해 주세요</p>\n                            <div className=\"content\">\n                                <ul className=\"ListClass\">\n                                    {groups}\n                                </ul>\n                            </div>\n                            <div className=\"btns\" style={{ display: \"flex\" }}>\n                                <div className=\"submitAnswer\">\n                                    <a className=\"submitLink\" onClick={close} style={{ border: \"0\", outline: \"0\" }}>공유하기</a>\n                                </div>\n                                <div className=\"leavePage\">\n                                    <a className=\"leaveLink\" onClick={close} style={{ border: \"0\", outline: \"0\" }}>취소</a>\n                                </div>\n                            </div>\n                        </div>\n                    </React.Fragment>\n                    : null\n            }\n        </React.Fragment>\n    )\n}\nexport default Modal;","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/MyGroups.js",["123","124"],"import React from 'react';\nimport '../Group.css';\nimport Group from './Group';\nimport { Link, Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nclass MyGroups extends React.Component {\n    constructor(props) {\n        console.log('MyGroups render');\n        super(props);\n        this.state = {\n            groups: [{\n                gid: 1,\n                title: \"알고방\",\n                userCount: 5\n            },\n            {\n                gid: 3,\n                title: \"정처기방\",\n                userCount: 10\n\n            },\n            {\n                gid: 5,\n                title: \"운체방\",\n                userCount: 7\n            }]\n        }\n        this.props.sendGroupToShare(this.state.groups);\n    }\n\n    componentDidMount() {\n        /*this.myGroups()\n        .then(res => this.setState({groups: res}))\n        .catch(err => console.log(err));*/\n    }\n\n    myGroups = () => {\n        const response = fetch('/users/2/group');\n        const body = response.json();\n        this.props.sendGroupToShare(body);\n        return body;\n    }\n\n    group = () => {\n\n    }\n\n    render() {\n        let n = 0\n        let imgSrc = \"../images/group\";\n        return (\n            <Router>\n                <header />\n                <div className = \"my-tests\">\n                    <div className = \"test-over\">\n                        <div>\n                            <h1 className=\"title\">나의 그룹</h1>\n                        </div>\n                        <ul>\n                            {this.state.groups.map(g => {\n                                return (\n                                    <Link to={\"/group/\" + g.title}>\n                                        <button className=\"button\" onClick={function (e) {\n                                            this.setState({ mode: \"viewGroup\", gid: g.gid, title: g.title, userCount: g.userCount });\n                                        }.bind(this)}>\n                                            <div>\n                                                <img className=\"img\" src={imgSrc + (++n) + '.png'} alt=\"groupProfile\" /> <br />\n                                            </div>\n                                            <p className=\"grpTitle\">{g.title}</p>\n                                            <div>\n                                                <p className=\"headCnt\">장형주 님 외 {g.userCount - 1}명</p>\n                                            </div>\n                                        </button>\n                                    </Link>\n                                );\n                            })}\n                        </ul>\n                        <div>{ console.log(this.props.match)} \n                            {\n                                this.props.match.params.title ?\n                                <Group uid={this.props.uid} gid={this.props.match.params.gid} title={this.props.match.params.title} userCount={this.props.match.params.userCount} /> : \"\"\n                            }\n                            {/*<Switch>\n                                <Route exact path = \"/group/\" component = {MyGroups} />\n                                <Route path = \"/group/:gid\" component = { Group } />\n                                {this.state.groups.map(g => {\n                                    let path = \"/group/\" + g.title;\n                                    console.log(path);\n                                    return <Route path={path} render={() => <Group uid={this.props.uid} gid={g.gid} title={g.title} userCount={g.userCount} />} />\n                                })\n                                }\n                            </Switch>*/}\n                        </div>\n                    </div>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default MyGroups;","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/Group.js",["125","126","127","128"],"import React from 'react';\nimport '../TestPage.css';\nimport Board from './Board';\nimport TestList from './TestList';\n\nclass Group extends React.Component {\n    constructor(props) {\n        console.log('Group render');\n        super(props);\n        this.state = {\n            ranks : [],\n            groupInfo: {\n                members: [\n                    {\n                        id: \"3\",\n                        image_url: \"https://storage.googleapis.com/evenshunshine/default.png\",\n                        title: \"그룹1\"\n                      },\n                      {\n                        id: \"9\",\n                        image_url: \"https://storage.googleapis.com/evenshunshine/default.png\",\n                        title: \"그룹1\"\n                      },\n                      {\n                        id: \"2\",\n                        image_url: \"https://storage.googleapis.com/evenshunshine/default.png\",\n                        title: \"그룹1\"\n                      }\n                ],\n                tests : [\n                    {\n                        title: \"테스트1\",\n                        correct_count: null,\n                        question_count: 3,\n                        examed_at: null,\n                        created_at: \"2021-02-05T17:22:21.000Z\",\n                        updated_at: \"2021-02-05T17:22:21.000Z\",\n                        tid: 1,\n                        uid: 2,\n                        gid: 1\n                      },\n                      {\n                        title: \"테스트2\",\n                        correct_count: 1,\n                        question_count: 3,\n                        examed_at: \"2021-02-05T18:22:21.000Z\",\n                        created_at: \"2021-02-05T17:22:21.000Z\",\n                        updated_at: \"2021-02-05T17:22:21.000Z\",\n                        tid: 2,\n                        uid: 2,\n                        gid: 1\n                      }\n                ]\n            }\n        }\n    }\n\n    componentDidMount() {\n        /*this.getGroupInfo()\n        .then(res => this.setState({groupInfo: res}))\n        .catch(err => console.log(err));*/\n    }\n\n    getGroupInfo = () => {\n        const response = fetch('https://askyourself.herokuapp.com/groups/' + this.props.gid)\n        const body = response.json();\n        return body;\n    }\n\n\n    render() {\n        let myAchieve = 0;\n        let myContrib = 0;\n        let sum = 0;\n        let n = 0;\n        let total = this.state.groupInfo.tests.length;\n        const tests = this.state.groupInfo.tests;\n        console.log(tests.length);\n        while (n < tests.length) {\n            if (tests[n].uid === this.props.uid) {\n                // 맞힌 문제수 / 전체문제수\n                //myAchieve = tests[n].\n                //myContrib = members[n].\n                // sum = ( + ) / 2;\n            }\n            else {\n                // sum = \n            }\n            /*this.setState((prevState) => {\n                let newRanks = [...prevState.ranks];\n                newRanks = [...prevState.ranks, {uid: tests[n].uid, score: sum}];\n                this.setState({ranks: newRanks});\n            })*/\n            sum = 0;\n            n++;\n        }\n        let ranks = this.state.ranks;\n        let sortingField = \"score\";\n        ranks.sort((a, b) => (a.score < b.score) ? 1 : -1)\n        console.log(ranks);\n        n = 0;\n\n        return(\n            <div>\n                <div className = \"groupTitle\">\n                    <h3>나의 그룹 /</h3>\n                    <h1>{this.props.title}</h1>\n                    <p>장형주 님 외 {this.props.userCount - 1}명</p>\n                    <br/>\n                </div>\n                <div className = \"group-tests\">\n                <TestList tests={this.state.groupInfo.tests} gid={this.props.gid} onChangePageCreate={this.props.onChangePageCreate}/>\n                <div>\n                    <ul>\n                        {ranks.slice(3).map(r => {\n                            return (\n                                <div>\n                                    <p>{++n}</p>\n                                    <p>{r.uid}</p>\n                                </div>\n                            );\n                        })}\n                    </ul>\n                    <div>\n                        <div>\n                            <p>나의 학습 성취도</p>\n                            <div>{myAchieve}</div>\n                        </div>\n                        <div>\n                            <p>나의 스터디 그룹 기여도</p>\n                            <div>{myContrib}</div>\n\n                        </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Group;","/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/ShareDone.js",["129","130","131","132"],"import React from 'react';\nimport '../Modal.css';\nimport closebtn from '../images/Close_Btn.png'\n\nconst Modal = ({ isOpen, close }) => {\n\n    return (\n        <React.Fragment>\n            {\n                isOpen ?\n                    <React.Fragment>\n                        <div className=\"Modal-overlay\" onClick={close} />\n                        <div className=\"Modal\">\n                            <div className=\"button-wrap\">\n                                <a onClick={close} style={{ border: \"0\", outline: \"0\" }}><img src={closebtn}></img></a>\n                            </div>\n                            <p className=\"title\">테스트가 그룹에 성공적으로 <br/> 공유되었습니다! </p>\n                            <div className=\"content\">\n                                <ul>\n                                \n                                </ul>\n                            </div>\n                            <div className=\"btns\" style={{display: \"flex\"}}>\n                                <div className=\"submitAnswer\">\n                                    <a className=\"submitLink\" onClick={close} style={{ border: \"0\", outline: \"0\" }}>공유하기</a>\n                                </div>\n                                <div className=\"leavePage\">\n                                    <a className=\"leaveLink\" onClick={close} style={{ border: \"0\", outline: \"0\" }}>취소</a>\n                                </div>\n                            </div>\n                        </div>\n                    </React.Fragment>\n                    : null\n            }\n        </React.Fragment>\n    )\n}\nexport default Modal;",{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":2,"column":17,"nodeType":"139","messageId":"140","endLine":2,"endColumn":26},{"ruleId":"137","severity":1,"message":"141","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":17,"column":9,"nodeType":"144","endLine":17,"endColumn":60},{"ruleId":"145","severity":1,"message":"146","line":17,"column":60,"nodeType":"144","endLine":17,"endColumn":109},{"ruleId":"142","severity":1,"message":"143","line":24,"column":9,"nodeType":"144","endLine":24,"endColumn":60},{"ruleId":"142","severity":1,"message":"143","line":29,"column":11,"nodeType":"144","endLine":29,"endColumn":62},{"ruleId":"142","severity":1,"message":"143","line":34,"column":11,"nodeType":"144","endLine":34,"endColumn":61},{"ruleId":"137","severity":1,"message":"147","line":53,"column":13,"nodeType":"139","messageId":"140","endLine":53,"endColumn":19},{"ruleId":"145","severity":1,"message":"146","line":50,"column":30,"nodeType":"144","endLine":50,"endColumn":80},{"ruleId":"145","severity":1,"message":"146","line":10,"column":11,"nodeType":"144","endLine":10,"endColumn":58},{"ruleId":"137","severity":1,"message":"148","line":6,"column":8,"nodeType":"139","messageId":"140","endLine":6,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":41,"column":17,"nodeType":"144","endLine":41,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":41,"column":45,"nodeType":"144","endLine":41,"endColumn":85},{"ruleId":"142","severity":1,"message":"149","line":43,"column":17,"nodeType":"144","endLine":43,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":43,"column":28,"nodeType":"144","endLine":43,"endColumn":67},{"ruleId":"142","severity":1,"message":"143","line":46,"column":17,"nodeType":"144","endLine":49,"endColumn":34},{"ruleId":"142","severity":1,"message":"143","line":50,"column":17,"nodeType":"144","endLine":54,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":68,"column":17,"nodeType":"144","endLine":68,"endColumn":45},{"ruleId":"145","severity":1,"message":"146","line":68,"column":45,"nodeType":"144","endLine":68,"endColumn":85},{"ruleId":"142","severity":1,"message":"149","line":70,"column":17,"nodeType":"144","endLine":70,"endColumn":28},{"ruleId":"145","severity":1,"message":"146","line":70,"column":28,"nodeType":"144","endLine":70,"endColumn":67},{"ruleId":"142","severity":1,"message":"143","line":73,"column":17,"nodeType":"144","endLine":77,"endColumn":33},{"ruleId":"142","severity":1,"message":"149","line":91,"column":13,"nodeType":"144","endLine":94,"endColumn":29},{"ruleId":"145","severity":1,"message":"146","line":14,"column":21,"nodeType":"144","endLine":14,"endColumn":75},{"ruleId":"142","severity":1,"message":"149","line":19,"column":25,"nodeType":"144","endLine":19,"endColumn":36},{"ruleId":"145","severity":1,"message":"146","line":19,"column":36,"nodeType":"144","endLine":19,"endColumn":78},{"ruleId":"142","severity":1,"message":"149","line":20,"column":25,"nodeType":"144","endLine":20,"endColumn":36},{"ruleId":"145","severity":1,"message":"146","line":20,"column":36,"nodeType":"144","endLine":20,"endColumn":77},{"ruleId":"142","severity":1,"message":"149","line":23,"column":25,"nodeType":"144","endLine":26,"endColumn":39},{"ruleId":"137","severity":1,"message":"150","line":5,"column":8,"nodeType":"139","messageId":"140","endLine":5,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":133,"column":37,"nodeType":"144","endLine":136,"endColumn":51},{"ruleId":"142","severity":1,"message":"143","line":139,"column":37,"nodeType":"144","endLine":140,"endColumn":38},{"ruleId":"142","severity":1,"message":"143","line":99,"column":29,"nodeType":"144","endLine":102,"endColumn":43},{"ruleId":"142","severity":1,"message":"143","line":105,"column":29,"nodeType":"144","endLine":106,"endColumn":77},{"ruleId":"151","severity":1,"message":"152","line":41,"column":27,"nodeType":"153","endLine":41,"endColumn":37},{"ruleId":"145","severity":1,"message":"146","line":51,"column":17,"nodeType":"144","endLine":51,"endColumn":66},{"ruleId":"145","severity":1,"message":"146","line":60,"column":25,"nodeType":"144","endLine":60,"endColumn":66},{"ruleId":"137","severity":1,"message":"154","line":4,"column":10,"nodeType":"139","messageId":"140","endLine":4,"endColumn":18},{"ruleId":"142","severity":1,"message":"143","line":50,"column":33,"nodeType":"144","endLine":50,"endColumn":90},{"ruleId":"145","severity":1,"message":"146","line":50,"column":90,"nodeType":"144","endLine":50,"endColumn":110},{"ruleId":"142","severity":1,"message":"143","line":60,"column":37,"nodeType":"144","endLine":60,"endColumn":117},{"ruleId":"142","severity":1,"message":"143","line":63,"column":37,"nodeType":"144","endLine":63,"endColumn":116},{"ruleId":"137","severity":1,"message":"155","line":4,"column":16,"nodeType":"139","messageId":"140","endLine":4,"endColumn":21},{"ruleId":"137","severity":1,"message":"156","line":4,"column":23,"nodeType":"139","messageId":"140","endLine":4,"endColumn":29},{"ruleId":"137","severity":1,"message":"157","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":13},{"ruleId":"137","severity":1,"message":"158","line":76,"column":13,"nodeType":"139","messageId":"140","endLine":76,"endColumn":18},{"ruleId":"137","severity":1,"message":"159","line":94,"column":13,"nodeType":"139","messageId":"140","endLine":94,"endColumn":16},{"ruleId":"137","severity":1,"message":"160","line":98,"column":13,"nodeType":"139","messageId":"140","endLine":98,"endColumn":25},{"ruleId":"142","severity":1,"message":"143","line":15,"column":33,"nodeType":"144","endLine":15,"endColumn":90},{"ruleId":"145","severity":1,"message":"146","line":15,"column":90,"nodeType":"144","endLine":15,"endColumn":110},{"ruleId":"142","severity":1,"message":"143","line":25,"column":37,"nodeType":"144","endLine":25,"endColumn":117},{"ruleId":"142","severity":1,"message":"143","line":28,"column":37,"nodeType":"144","endLine":28,"endColumn":116},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'SignIn' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'config' is assigned a value but never used.","'ShareDone' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Moment' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'Checkbox' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Board' is defined but never used.","'total' is assigned a value but never used.","'sum' is assigned a value but never used.","'sortingField' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]