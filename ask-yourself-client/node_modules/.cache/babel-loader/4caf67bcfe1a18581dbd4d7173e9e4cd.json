{"ast":null,"code":"var _jsxFileName = \"/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/Home.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Home.css';\nimport Board from './components/Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    // 컴포넌트 초기화\n    super(props);\n    this.state = {\n      mode: 'mypage',\n      user: {\n        id: 'User',\n        solvedCount: '2',\n        unsolvedCount: '1',\n        imageUrl: '1'\n      },\n      testList: [{\n        id: 1,\n        title: 'Test1',\n        date: '2021/02/02',\n        status: 'no',\n        all: '',\n        correct: ''\n      }, {\n        id: 2,\n        title: 'Test2',\n        date: '2021/02/02',\n        status: 'yes',\n        all: '10',\n        correct: '7'\n      }, {\n        id: 3,\n        title: 'Test3',\n        date: '2021/02/02',\n        status: 'no',\n        all: '',\n        correct: ''\n      }],\n      groupList: [{\n        id: 1,\n        name: '영단어',\n        memcount: '5',\n        status: 'no',\n        all: '',\n        correct: ''\n      }, {\n        id: 2,\n        name: '영단어',\n        memcount: '5',\n        status: 'yes',\n        all: '10',\n        correct: '7'\n      }, {\n        id: 3,\n        name: '영단어',\n        memcount: '5',\n        status: 'no',\n        all: '',\n        correct: ''\n      }],\n      isModalOpen: false\n    };\n  } // gerProfile = async (userid) => { \n  //   try { \n  //     var url = \"./api/user/s\" + {userid}\n  //     const response = await axios.get( ); \n  //     this.setState({  user: response.data }); \n  //   } catch (e) { \n  //     console.log(e); \n  //   } \n  // }; \n  // getTests = async (userid) => { \n  //   try { \n  //     var url = \"./api/users/\" + {userid} + \"/test\"\n  //     const response = await axios.get( ); \n  //     this.setState({  tests: response.data }); \n  //   } catch (e) { \n  //     console.log(e); \n  //   } \n  // }; \n  // //마운트 될때 실행 \n  // componentDidMount() { \n  //   const { gerProfile } = this; gerProfile(this.props.userid); \n  //   const { getTests } = this; getTests(this.props.userid); \n  // }\n\n\n  render() {\n    console.log(this.state.test);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"script\", {\n        src: \"../public/js/prefixfree.min.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Board, {\n        mode: this.state.mode,\n        user: this.state.user,\n        testList: this.state.testList,\n        onChangePageCreate: function () {\n          this.setState({\n            mode: 'testCreate'\n          });\n        }.bind(this),\n        onChangePageCreateDone: function (tid) {\n          this.setState({\n            mode: 'testCreatedone'\n          });\n        }.bind(this),\n        onChangePageStartTest: function () {\n          this.setState({\n            mode: 'startTest'\n          });\n        }.bind(this),\n        onChangePageTestResult: function () {\n          this.setState({\n            mode: 'testResult'\n          });\n        }.bind(this),\n        onChangePageReStartTest: function (tid) {\n          this.setState({\n            mode: 'startTest'\n          });\n        }.bind(this),\n        loadModal: this.loadModal,\n        groupList: this.state.groupList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/Home.js"],"names":["React","Component","axios","Board","Home","constructor","props","state","mode","user","id","solvedCount","unsolvedCount","imageUrl","testList","title","date","status","all","correct","groupList","name","memcount","isModalOpen","render","console","log","test","setState","bind","tid","loadModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Home.css';\nimport Board from './components/Board';\n\nclass Home extends Component {\n  constructor(props) { // 컴포넌트 초기화\n    super(props);\n    this.state = {\n      mode: 'mypage',\n      user: {\n        id: 'User',\n        solvedCount: '2',\n        unsolvedCount: '1',\n        imageUrl: '1'\n      },\n      testList: [\n        { id: 1, title: 'Test1', date: '2021/02/02', status: 'no', all: '', correct: '' },\n        { id: 2, title: 'Test2', date: '2021/02/02', status: 'yes', all: '10', correct: '7' },\n        { id: 3, title: 'Test3', date: '2021/02/02', status: 'no', all: '', correct: '' }\n      ],\n      groupList: [\n        { id: 1, name: '영단어', memcount: '5', status: 'no', all: '', correct: '' },\n        { id: 2, name: '영단어', memcount: '5', status: 'yes', all: '10', correct: '7' },\n        { id: 3, name: '영단어', memcount: '5', status: 'no', all: '', correct: '' }\n      ],\n      isModalOpen: false, \n    }\n  }\n\n  // gerProfile = async (userid) => { \n  //   try { \n  //     var url = \"./api/user/s\" + {userid}\n  //     const response = await axios.get( ); \n  //     this.setState({  user: response.data }); \n  //   } catch (e) { \n  //     console.log(e); \n  //   } \n  // }; \n\n  // getTests = async (userid) => { \n  //   try { \n  //     var url = \"./api/users/\" + {userid} + \"/test\"\n  //     const response = await axios.get( ); \n  //     this.setState({  tests: response.data }); \n  //   } catch (e) { \n  //     console.log(e); \n  //   } \n  // }; \n\n  // //마운트 될때 실행 \n  // componentDidMount() { \n  //   const { gerProfile } = this; gerProfile(this.props.userid); \n  //   const { getTests } = this; getTests(this.props.userid); \n  // }\n\n  render() {\n    console.log(this.state.test);\n    return (\n      <div className=\"App\">\n        <script src=\"../public/js/prefixfree.min.js\"></script>\n        <Board\n          mode={this.state.mode}\n          user={this.state.user}\n          testList={this.state.testList}\n          onChangePageCreate={function () {\n            this.setState({ mode: 'testCreate' })\n          }.bind(this)}\n          onChangePageCreateDone={function (tid) {\n            this.setState({ mode: 'testCreatedone' })\n          }.bind(this)}\n          onChangePageStartTest={function () {\n            this.setState({ mode: 'startTest' })\n          }.bind(this)}\n          onChangePageTestResult={function () {\n            this.setState({ mode: 'testResult' })\n          }.bind(this)}\n          onChangePageReStartTest={function (tid) {\n            this.setState({ mode: 'startTest' })\n          }.bind(this)}\n          loadModal={this.loadModal}\n          groupList={this.state.groupList}\n        >\n        </Board>\n\n      </div>\n    );\n  }\n}\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}