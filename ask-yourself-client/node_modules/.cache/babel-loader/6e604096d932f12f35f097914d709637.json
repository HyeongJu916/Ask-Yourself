{"ast":null,"code":"var _jsxFileName = \"/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/Home.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './Home.css';\nimport Board from './components/Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    // 컴포넌트 초기화\n    super(props);\n\n    this.gerProfile = async userid => {\n      try {\n        var url = \"https://askyourself.herokuapp.com/users/1/profile\";\n        const response = await axios.get(url);\n        this.setState({\n          user: response.data.result\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.getData = async userid => {\n      try {\n        const response = await axios.get(`https://askyourself.herokuapp.com/tests/all`, {\n          method: 'GET',\n          body: JSON.stringify({\n            uid: 1\n          }),\n          headers: {\n            \"Content-type\": \"application/json; charset=UTF-8\"\n          }\n        }).then(response => response.json()).then(json => console.log(json));\n        console.warn(response.data);\n      } catch (error) {\n        console.warn(error);\n      }\n    };\n\n    this.state = {\n      mode: 'mypage',\n      user: {\n        id: 'User',\n        solvedCount: '2',\n        unsolvedCount: '1',\n        imageUrl: '1'\n      },\n      testList: [{\n        id: 1,\n        title: 'Test1',\n        date: '2021/02/02',\n        status: 'no',\n        all: '',\n        correct: ''\n      }, {\n        id: 2,\n        title: 'Test2',\n        date: '2021/02/02',\n        status: 'yes',\n        all: '10',\n        correct: '7'\n      }, {\n        id: 3,\n        title: 'Test3',\n        date: '2021/02/02',\n        status: 'no',\n        all: '',\n        correct: ''\n      }],\n      groups: [{\n        gid: 1,\n        title: \"알고방\",\n        userCount: 5\n      }, {\n        gid: 3,\n        title: \"정처기방\",\n        userCount: 10\n      }, {\n        gid: 5,\n        itle: \"운체방\",\n        userCount: 7\n      }]\n    };\n  }\n\n  // getTests = async (userid) => { \n  //   try { \n  //     var url = \"https://askyourself.herokuapp.com/tests/all\"\n  //     const formData = new FormData();\n  //     formData.append('uid', 1);\n  //     const config = {\n  //       headers: {\n  //           'content-type': 'multipart/form-data'\n  //       }\n  //     };\n  //     const response = await axios.get( url, formData, config); \n  //     this.setState({  tests: response }); \n  //     console.log(response);\n  //   } catch (e) { \n  //     console.log(e); \n  //   } \n  // }; \n  //마운트 될때 실행 \n  componentDidMount() {\n    const {\n      gerProfile\n    } = this;\n    gerProfile(this.props.userid);\n    const {\n      getTests\n    } = this;\n    getData(this.props.userid);\n  }\n\n  render() {\n    console.log(this.state.test);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        mode: this.state.mode,\n        user: this.state.user,\n        testList: this.state.testList,\n        onChangePageCreate: function () {\n          this.setState({\n            mode: 'testCreate'\n          });\n        }.bind(this),\n        onChangePageCreateDone: function (tid) {\n          this.setState({\n            mode: 'testCreatedone'\n          });\n        }.bind(this),\n        onChangePageStartTest: function () {\n          this.setState({\n            mode: 'startTest'\n          });\n        }.bind(this),\n        onChangePageTestResult: function () {\n          this.setState({\n            mode: 'testResult'\n          });\n        }.bind(this),\n        onChangePageReStartTest: function (tid) {\n          this.setState({\n            mode: 'startTest'\n          });\n        }.bind(this),\n        loadModal: this.loadModal,\n        groupList: this.props.groups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/Home.js"],"names":["React","Component","axios","Board","Home","constructor","props","gerProfile","userid","url","response","get","setState","user","data","result","e","console","log","getData","method","body","JSON","stringify","uid","headers","then","json","warn","error","state","mode","id","solvedCount","unsolvedCount","imageUrl","testList","title","date","status","all","correct","groups","gid","userCount","itle","componentDidMount","getTests","render","test","bind","tid","loadModal"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport './Home.css';\nimport Board from './components/Board';\n\nclass Home extends Component {\n  constructor(props) { // 컴포넌트 초기화\n    super(props);\n    this.state = {\n      mode: 'mypage',\n      user: {\n        id: 'User',\n        solvedCount: '2',\n        unsolvedCount: '1',\n        imageUrl: '1'\n      },\n      testList: [\n        { id: 1, title: 'Test1', date: '2021/02/02', status: 'no', all: '', correct: '' },\n        { id: 2, title: 'Test2', date: '2021/02/02', status: 'yes', all: '10', correct: '7' },\n        { id: 3, title: 'Test3', date: '2021/02/02', status: 'no', all: '', correct: '' }\n      ],\n      groups: [{ gid: 1, title: \"알고방\", userCount: 5 },\n      { gid: 3, title: \"정처기방\", userCount: 10 },\n      { gid: 5, itle: \"운체방\", userCount: 7}]\n    }\n  }\n\n  gerProfile = async (userid) => { \n    try { \n      var url = \"https://askyourself.herokuapp.com/users/1/profile\"\n      const response = await axios.get(url); \n      this.setState({ user: response.data.result }); \n    } catch (e) { \n      console.log(e); \n    } \n  };\n\n  getData = async (userid) => {\n    try {\n        const response = await axios.get(`https://askyourself.herokuapp.com/tests/all`, {\n            method: 'GET',\n            body: JSON.stringify({\n                uid : 1\n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n            .then(response => response.json())\n            .then(json => console.log(json));\n        console.warn(response.data);\n    } catch (error) {\n        console.warn(error);\n    }\n}\n\n  // getTests = async (userid) => { \n  //   try { \n  //     var url = \"https://askyourself.herokuapp.com/tests/all\"\n  \n  //     const formData = new FormData();\n  //     formData.append('uid', 1);\n  //     const config = {\n  //       headers: {\n  //           'content-type': 'multipart/form-data'\n  //       }\n  //     };\n\n  //     const response = await axios.get( url, formData, config); \n\n  //     this.setState({  tests: response }); \n\n  //     console.log(response);\n\n  //   } catch (e) { \n  //     console.log(e); \n  //   } \n  // }; \n\n  //마운트 될때 실행 \n  componentDidMount() { \n    const { gerProfile } = this; gerProfile(this.props.userid); \n    const { getTests } = this; getData(this.props.userid); \n  }\n\n  render() {\n    console.log(this.state.test);\n    return (\n      <div className=\"App\">\n        <Board\n          mode={this.state.mode}\n          user={this.state.user}\n          testList={this.state.testList}\n          onChangePageCreate={function () {\n            this.setState({ mode: 'testCreate' })\n          }.bind(this)}\n          onChangePageCreateDone={function (tid) {\n            this.setState({ mode: 'testCreatedone' })\n          }.bind(this)}\n          onChangePageStartTest={function () {\n            this.setState({ mode: 'startTest' })\n          }.bind(this)}\n          onChangePageTestResult={function () {\n            this.setState({ mode: 'testResult' })\n          }.bind(this)}\n          onChangePageReStartTest={function (tid) {\n            this.setState({ mode: 'startTest' })\n          }.bind(this)}\n          loadModal={this.loadModal}\n          groupList={this.props.groups}\n        >\n        </Board>\n\n      </div>\n    );\n  }\n}\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}