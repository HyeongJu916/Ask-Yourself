{"ast":null,"code":"var _jsxFileName = \"/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/StartTest.js\";\nimport React from 'react';\nimport { post } from 'axios';\nimport '../TestPage.css';\nimport TestResult from './TestResult';\nimport Moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StartTest extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getQuestions = () => {\n      const response = fetch('/tests/' + this.props.testId);\n      const body = response.json();\n      return body;\n    };\n\n    this.handleValueChange = e => {\n      const id = e.target.id;\n      const data = e.target.value;\n      let exist = 0;\n      const {\n        answers\n      } = this.state;\n      let i = 0;\n\n      while (i < answers.length) {\n        if (id === answers[i].qid) {\n          answers[i].answer = data;\n          exist = 1;\n        }\n\n        i++;\n      }\n\n      if (exist === 0) {\n        this.setState(prevState => {\n          let newAnswers = [...prevState.answers];\n          newAnswers = [...prevState.answers, {\n            qid: id,\n            answer: data\n          }];\n          this.setState({\n            answers: newAnswers\n          });\n        });\n      }\n\n      console.log(answers);\n    };\n\n    this.handleFormSubmit = e => {\n      e.preventDefault();\n      this.sendAnswer().then(response => {\n        console.log(response.data);\n        this.setState({\n          mode: \"result\"\n        });\n      }); //this.props.history.push(\"/\");\n    };\n\n    this.sendAnswer = () => {\n      // tid, {qid, }\n      const url = '/api/' + this.props.testId + '/result';\n      const formData = new FormData();\n      formData.append('answers', this.state.answers);\n      /*formData.append('pw', this.state.pw)\n      const config = {\n          headers: {\n              'content-type': 'multipart/form-data'\n          }\n      }*/\n\n      return post(url, formData);\n    };\n\n    this.state = {\n      mode: 'read',\n      questions: [{\n        qid: '1',\n        question: \"What is your favorite color?\"\n      }, {\n        qid: '2',\n        question: \"What is your favorite food?\"\n      }, {\n        qid: '3',\n        question: \"What is your favorite brand?\"\n      }],\n      answers: []\n    };\n  }\n\n  componentDidMount() {\n    /*this.getQuestions()\n    .then(res => this.setState({questions: res}))\n    .catch(err => console.log(err));*/\n  }\n\n  render() {\n    let num = 0;\n    let cards = [];\n    const questions = this.state.questions;\n\n    while (num < questions.length) {\n      cards.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"qCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: [\"\\uC9C8\\uBB38 \", num + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: questions[num].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"aCard\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"title\",\n            children: \"\\uB098\\uC758 \\uB2F5\\uBCC0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"answer\",\n            id: questions[num].qid,\n            value: this.state.answers.answer,\n            onChange: this.handleValueChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, num + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this));\n      num++;\n    }\n\n    let mode = this.state.mode;\n\n    if (mode === \"result\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(TestResult, {\n          testId: this.props.testId,\n          testName: this.props.testName,\n          testDate: new Date().toLocaleString(),\n          total: this.state.questions.length,\n          dateGenerated: this.props.dateGenerated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this);\n    } else if (mode === \"leave\") {} else {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleFormSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"testName\",\n            children: [\" \", this.props.testName, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"dateGenerated\",\n            children: [\" \", this.props.dateGenerated, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards\",\n            style: {\n              overflow: \"auto\",\n              width: \"500\",\n              height: \"150\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              children: cards\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"submitAnswer\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"submitLink\",\n                onClick: function (e) {\n                  this.props.onChangePageTestResult();\n                  this.setState({\n                    mode: \"result\"\n                  });\n                }.bind(this),\n                children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"leavePage\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"leaveLink\",\n                onClick: () => {\n                  window.location.href = \"/\";\n                },\n                children: \"\\uB098\\uAC00\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default StartTest;","map":{"version":3,"sources":["/Users/jhj/Desktop/Ask-Yourself/ask-yourself-client/src/components/StartTest.js"],"names":["React","post","TestResult","Moment","StartTest","Component","constructor","props","getQuestions","response","fetch","testId","body","json","handleValueChange","e","id","target","data","value","exist","answers","state","i","length","qid","answer","setState","prevState","newAnswers","console","log","handleFormSubmit","preventDefault","sendAnswer","then","mode","url","formData","FormData","append","questions","question","componentDidMount","render","num","cards","push","testName","Date","toLocaleString","dateGenerated","overflow","width","height","onChangePageTestResult","bind","window","location","href"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { post } from 'axios';\nimport '../TestPage.css';\nimport TestResult from './TestResult';\nimport Moment from 'moment';\n\nclass StartTest extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: 'read',\n            questions: [{\n                qid : '1',\n                question: \"What is your favorite color?\"\n            },\n            {\n                qid : '2',\n                question: \"What is your favorite food?\"\n            },\n            {\n                qid : '3',\n                question: \"What is your favorite brand?\"\n            }],\n            answers: []\n        }\n    }\n\n    componentDidMount() {\n        /*this.getQuestions()\n        .then(res => this.setState({questions: res}))\n        .catch(err => console.log(err));*/\n    }\n\n    getQuestions = () => {\n        const response = fetch('/tests/' + this.props.testId)\n        const body = response.json();\n        return body;\n    }\n\n    handleValueChange = (e) => {\n        const id = e.target.id;\n        const data = e.target.value;\n        let exist = 0;\n        const { answers } = this.state;\n\n        let i = 0;\n        while (i < answers.length) {\n            if (id === answers[i].qid) {\n                answers[i].answer = data;\n                exist = 1;\n            }\n            i++;\n        }\n\n        if (exist === 0) {\n            this.setState((prevState) => {\n                let newAnswers = [...prevState.answers];\n                newAnswers = [...prevState.answers, {qid: id, answer: data}];\n                this.setState({answers: newAnswers});\n            })\n        }\n        console.log(answers);\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        this.sendAnswer()\n        .then((response) => {\n            console.log(response.data);\n            this.setState({mode: \"result\"})\n        })\n        //this.props.history.push(\"/\");\n    }\n\n    sendAnswer = () => {\n        // tid, {qid, }\n        const url = '/api/' + this.props.testId + '/result';\n        const formData = new FormData();\n        formData.append('answers', this.state.answers)\n        /*formData.append('pw', this.state.pw)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }*/\n        return post(url, formData)\n    }\n\n    render() {\n        let num = 0;\n        let cards = [];\n        const questions = this.state.questions;\n        while (num < questions.length) {\n            cards.push(\n                <li key = {num+1}> \n                    <div className = \"qCard\">\n                        <p className = \"title\">질문 {num + 1}</p>\n                        <div className = \"question\">\n                            {questions[num].question}\n                        </div>\n                    </div>\n                    <div className = \"aCard\">\n                        <p className = \"title\">나의 답변</p>\n                        <textarea className = \"answer\" id={questions[num].qid} value={this.state.answers.answer} onChange={this.handleValueChange}/>\n                    </div>\n                </li>\n            )\n            num++;\n        }\n        let mode = this.state.mode;\n        if (mode === \"result\") {\n            return(\n                <div>\n                    <TestResult testId = {this.props.testId} testName = {this.props.testName} testDate = {new Date().toLocaleString()} total = {this.state.questions.length} dateGenerated = {this.props.dateGenerated}/>\n                </div>\n            );\n        }\n        else if (mode === \"leave\") {\n            \n        }\n        else {\n            return (\n                <form onSubmit={this.handleFormSubmit}>\n                    <div className=\"flex-wrapper\">\n                        <p className=\"testName\"> {this.props.testName} </p>\n                        <h3 className=\"dateGenerated\"> {this.props.dateGenerated} </h3>\n                        <div className=\"cards\" style={{overflow:\"auto\", width:\"500\", height:\"150\"}}>\n                            <ul>\n                                {cards}\n                            </ul>\n\n                            <button type=\"submit\" className=\"submitAnswer\">\n                                <a className = \"submitLink\" onClick = {function(e) {\n                                    this.props.onChangePageTestResult();\n                                    this.setState({mode: \"result\"});\n                                }.bind(this)}>제출하기</a>\n                            </button>\n                            <button className=\"leavePage\">\n                                <a className = \"leaveLink\" onClick={() => {window.location.href=\"/\"}}\n                                >나가기</a>\n                            </button>\n                            <br/>\n                        </div>\n                    </div>\n                </form>\n            );\n        }\n    }\n}\n\nexport default StartTest;"]},"metadata":{},"sourceType":"module"}