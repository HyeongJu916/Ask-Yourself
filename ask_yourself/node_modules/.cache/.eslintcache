[{"/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/index.js":"1","/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/reportWebVitals.js":"2","/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/App.js":"3","/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/components/Profile.js":"4","/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/components/TestList.js":"5","/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/components/Board.js":"6","/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/Home.js":"7","/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/components/CreateTest.js":"8","/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/components/CreateTestDone.js":"9"},{"size":510,"mtime":1612427126454,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1612419213197,"results":"12","hashOfConfig":"11"},{"size":1142,"mtime":1612506054832,"results":"13","hashOfConfig":"11"},{"size":807,"mtime":1612502070305,"results":"14","hashOfConfig":"11"},{"size":2546,"mtime":1612493109557,"results":"15","hashOfConfig":"11"},{"size":1312,"mtime":1612490792788,"results":"16","hashOfConfig":"11"},{"size":2280,"mtime":1612506324003,"results":"17","hashOfConfig":"11"},{"size":2577,"mtime":1612508381178,"results":"18","hashOfConfig":"11"},{"size":1224,"mtime":1612494453201,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"eo99xf",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/index.js",[],["42","43"],"/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/reportWebVitals.js",[],"/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/App.js",["44","45","46"],"/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/components/Profile.js",["47"],"import React, { Component } from 'react';\n\nclass Profile extends Component{\n  render() {\n    return (\n      <div className=\"profile\">\n        <div className=\"profile-box\">\n          <img className=\"profile-image\" src={this.props.user.imageUrl}/>\n        </div>\n        <h2 className=\"user-id\"> {this.props.user.id} </h2>\n        <div className=\"user-bar\"></div>\n        <div className=\"user_status\">\n          <div className=\"flex\">\n            <h6 className=\"mytest-all\">완료한 테스트        <br /><br /><br />\n                진행중인 테스트         </h6>\n            <h6 className=\"mytest-all-num\" >     {this.props.user.solvedCount}  <br/><br /><br />\n                   {this.props.user.unsolvedCount}</h6>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;","/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/components/TestList.js",["48","49","50","51","52","53","54","55","56","57","58","59"],"\nimport React, { Component } from 'react';\nimport like from '../images/testlike.png';\nimport share from '../images/testshare.png';\n\n\nclass TestList extends Component {\n  render() {\n    console.log('TestList render');\n    var lists = [];\n    var tests = this.props.tests;\n    var i = 0;\n    while (i < tests.length) {\n      if (tests[i].status === \"yes\") {\n        lists.push(\n          <li key={tests[i].id} className=\"test\">\n            <div className=\"test-info\">\n              <p>{tests[i].title}</p>\n              <h6>{tests[i].date}</h6>\n            </div>\n            <div className=\"test-result\">\n              <div className=\"sub-icon\">\n                <a href=\"\"><img src={share} width='50' height='50'></img></a>\n                <a href=\"\"><img src={like} width='50' height='50'></img></a>\n              </div>\n              <div className=\"flex\">\n                <a href=\"\" className=\"btn-result\" >결과보기</a>\n                <a href=\"\" className=\"btn-result\">재시험보기</a>\n              </div>\n            </div>\n          </li>)\n        i = i + 1;\n      } else {\n        lists.push(\n          <li key={tests[i].id} className=\"test\">\n            <div className=\"test-info\">\n              <p>{tests[i].title}</p>\n              <h6>{tests[i].date}</h6>\n            </div>\n            <div className=\"test-result-second\">\n              <div className=\"sub-icon\">\n                <a href=\"\"><img src={share} width='50' height='50'></img></a>\n                <a href=\"\"><img src={like} width='50' height='50'></img></a>\n              </div>\n              <div className=\"flex\">\n                <a className=\"btn-result\"  href={\"/test.html/\" + tests[i].id}\n                  data-id={tests[i].id}\n                  onClick={function (e) {\n                    e.preventDefault();\n                  }.bind(this)}>시험 시작하기 </a>\n              </div>\n            </div>\n          </li>)\n        i = i + 1;\n      }\n    }\n    return (\n      <div className=\"my-tests\">\n        <div className=\"test-over\">\n          <div>\n            <h1 className=\"title\"> 나의 테스트 </h1>\n          </div>\n          <div className=\"testbtn\">\n            <a href=\"#\" className=\"testbtn-font\"\n              onClick={function (e) {\n                this.props.onChangePageCreate();\n              }.bind(this)}><p className=\"testbtn-font\">+ 새로운 테스트 만들기</p>\n            </a>\n          </div>\n        </div>\n        <ul className=\"testlist\">\n          {lists}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default TestList;","/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/components/Board.js",[],"/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/Home.js",["60","61","62","63","64","65","66"],"/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/components/CreateTest.js",["67"],"/Users/jhj/Desktop/Ask-Yourself/ask_yourself/src/components/CreateTestDone.js",["68","69","70","71","72","73"],"import React, { Component } from 'react';\nimport '../CreateTest.css'\nimport createMyTestDone from '../images/Create_Mytest_Done.png';\nimport '../CreateTestDone.css'\nimport like from '../images/testlike.png';\nimport share from '../images/testshare.png';\n\n\nclass CreateTestDone extends Component{\n    render() {\n        return (\n            <div className=\"CTD-done\" >\n                <div className=\"CTD-done-content\">\n                    <img src={createMyTestDone} width='300' height='300'/>\n                    <p>테스트가 성공적으로 완성되었습니다 ! <br/><br/>\n                        테스트를 친구들과 공유하고 <br/>\n                        함께 공부해보세요.</p>\n                    <div className=\"CTD-btns\">\n                        <a href=\"\"><img src={share} width='50' height='50' /></a>\n                        <a href=\"\"><img src={like} width='50' height='50' /></a>\n                    </div>\n                    <div className=\"CTD-test-btn\">\n                        <a href=\"\">\n                            <p>시험보기</p>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CreateTestDone;",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":17,"nodeType":"80","messageId":"81","endLine":2,"endColumn":26},{"ruleId":"82","severity":1,"message":"83","line":13,"column":9,"nodeType":"84","endLine":13,"endColumn":85},{"ruleId":"82","severity":1,"message":"83","line":17,"column":9,"nodeType":"84","endLine":17,"endColumn":56},{"ruleId":"85","severity":1,"message":"86","line":8,"column":11,"nodeType":"84","endLine":8,"endColumn":74},{"ruleId":"82","severity":1,"message":"87","line":23,"column":17,"nodeType":"84","endLine":23,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":23,"column":28,"nodeType":"84","endLine":23,"endColumn":68},{"ruleId":"82","severity":1,"message":"87","line":24,"column":17,"nodeType":"84","endLine":24,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":24,"column":28,"nodeType":"84","endLine":24,"endColumn":67},{"ruleId":"82","severity":1,"message":"87","line":27,"column":17,"nodeType":"84","endLine":27,"endColumn":52},{"ruleId":"82","severity":1,"message":"87","line":28,"column":17,"nodeType":"84","endLine":28,"endColumn":51},{"ruleId":"82","severity":1,"message":"87","line":42,"column":17,"nodeType":"84","endLine":42,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":42,"column":28,"nodeType":"84","endLine":42,"endColumn":68},{"ruleId":"82","severity":1,"message":"87","line":43,"column":17,"nodeType":"84","endLine":43,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":43,"column":28,"nodeType":"84","endLine":43,"endColumn":67},{"ruleId":"88","severity":1,"message":"89","line":50,"column":21,"nodeType":"90","messageId":"91","endLine":50,"endColumn":25,"fix":"92"},{"ruleId":"82","severity":1,"message":"87","line":64,"column":13,"nodeType":"84","endLine":67,"endColumn":29},{"ruleId":"78","severity":1,"message":"93","line":4,"column":27,"nodeType":"80","messageId":"81","endLine":4,"endColumn":33},{"ruleId":"78","severity":1,"message":"94","line":4,"column":35,"nodeType":"80","messageId":"81","endLine":4,"endColumn":40},{"ruleId":"78","severity":1,"message":"95","line":4,"column":42,"nodeType":"80","messageId":"81","endLine":4,"endColumn":46},{"ruleId":"78","severity":1,"message":"96","line":28,"column":13,"nodeType":"80","messageId":"81","endLine":28,"endColumn":16},{"ruleId":"78","severity":1,"message":"96","line":38,"column":13,"nodeType":"80","messageId":"81","endLine":38,"endColumn":16},{"ruleId":"78","severity":1,"message":"97","line":55,"column":20,"nodeType":"80","messageId":"81","endLine":55,"endColumn":26},{"ruleId":"78","severity":1,"message":"98","line":57,"column":7,"nodeType":"80","messageId":"81","endLine":57,"endColumn":12},{"ruleId":"85","severity":1,"message":"86","line":42,"column":30,"nodeType":"84","endLine":42,"endColumn":80},{"ruleId":"85","severity":1,"message":"86","line":14,"column":21,"nodeType":"84","endLine":14,"endColumn":75},{"ruleId":"82","severity":1,"message":"87","line":19,"column":25,"nodeType":"84","endLine":19,"endColumn":36},{"ruleId":"85","severity":1,"message":"86","line":19,"column":36,"nodeType":"84","endLine":19,"endColumn":78},{"ruleId":"82","severity":1,"message":"87","line":20,"column":25,"nodeType":"84","endLine":20,"endColumn":36},{"ruleId":"85","severity":1,"message":"86","line":20,"column":36,"nodeType":"84","endLine":20,"endColumn":77},{"ruleId":"82","severity":1,"message":"87","line":23,"column":25,"nodeType":"84","endLine":23,"endColumn":36},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"101","text":"102"},"'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'url' is assigned a value but never used.","'_tests' is assigned a value but never used.","'_user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1797,1808],""]